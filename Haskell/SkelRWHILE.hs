module SkelRWHILE where

-- Haskell module generated by the BNF converter

import AbsRWHILE
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident str  -> failure x


transProgram :: Program -> Result
transProgram x = case x of
  PDefs id1 cmds2 id3  -> failure x


transCmd :: Cmd -> Result
transCmd x = case x of
  SAss id exp  -> failure x
  SIf exp1 cmds2 cmds3 exp4  -> failure x
  SLoop exp1 cmds2 cmds3 exp4  -> failure x
  SStatus  -> failure x


transExp :: Exp -> Result
transExp x = case x of
  AEq exp1 exp2  -> failure x
  ATl exp  -> failure x
  AHd exp  -> failure x
  ACons exp1 exp2  -> failure x
  AVar id  -> failure x
  ANil  -> failure x


transVal :: Val -> Result
transVal x = case x of
  Cons val1 val2  -> failure x
  Nil  -> failure x



